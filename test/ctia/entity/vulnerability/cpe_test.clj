(ns ctia.entity.vulnerability.cpe-test
  (:require
   [clojure.test :refer [are deftest is testing use-fixtures]]
   [clj-momo.test-helpers.core :as mth]
   [ctia.entity.vulnerability.cpe :as sut]))

(use-fixtures :once mth/fixture-schema-validation)

(def left-closed-right-open
  {:configurations {:nodes [{:children [{:operator "OR",
                                         :cpe_match [{:cpe23Uri "cpe:2.3:o:juniper:advanced_threat_prevention:*:*:*:*:*:*:*:*"
                                                      :versionStartIncluding "5.0.0"
                                                      :versionEndExcluding "5.0.3"}]}
                                        {:operator "OR",
                                         :cpe_match [{:cpe23Uri "cpe:2.3:h:juniper:atp400:-:*:*:*:*:*:*:*"}]}]
                             :operator "AND"}]}
   :id "vulnerability-left-closed-right-open"})

(def single-configuration-no-children
  {:configurations {:nodes [{:operator "OR",
                             :cpe_match [{:cpe23Uri "cpe:2.3:o:microsoft:windows_10:-:*:*:*:*:*:*:*"}
                                         {:cpe23Uri "cpe:2.3:o:microsoft:windows_10:20h2:*:*:*:*:*:*:*"}
                                         {:cpe23Uri "cpe:2.3:o:microsoft:windows_10:1607:*:*:*:*:*:*:*"}]}]}
   :id "vulnerability-one"})

(def single-configuration-with-children
  {:configurations {:nodes [{:operator "AND"
                             :children [{:operator "OR"
                                         :cpe_match [{:cpe23Uri "cpe:2.3:a:nvidia:virtual_gpu_manager:*:*:*:*:*:*:*:*"}
                                                     {:cpe23Uri "cpe:2.3:a:nvidia:virtual_gpu_manager:*:*:*:*:*:*:*:*"}]}
                                        {:operator "OR"
                                         :cpe_match [{:cpe23Uri "cpe:2.3:o:citrix:hypervisor:-:*:*:*:*:*:*:*"}
                                                     {:cpe23Uri "cpe:2.3:o:nutanix:ahv:-:*:*:*:*:*:*:*"}
                                                     {:cpe23Uri "cpe:2.3:o:redhat:enterprise_linux_kernel-based_virtual_machine:-:*:*:*:*:*:*:*"}
                                                     {:cpe23Uri "cpe:2.3:o:vmware:vsphere:-:*:*:*:*:*:*:*"}]}]}]}
   :id "vulnerability-two"})

(def multiple-configurations
  {:configurations {:nodes [{:operator "AND"
                             :children
                             [{:operator "OR"
                               :cpe_match [{:cpe23Uri "cpe:2.3:a:nvidia:gpu_driver:*:*:*:*:*:*:*:*"}
                                           {:cpe23Uri "cpe:2.3:a:nvidia:gpu_driver:*:*:*:*:*:*:*:*"}
                                           {:cpe23Uri "cpe:2.3:a:nvidia:gpu_driver:*:*:*:*:*:*:*:*"}
                                           {:cpe23Uri "cpe:2.3:a:nvidia:gpu_driver:*:*:*:*:*:*:*:*"}]}
                              {:operator "OR"
                               :cpe_match [{:cpe23Uri "cpe:2.3:o:microsoft:windows:-:*:*:*:*:*:*:*"}]}]}
                            {:operator "AND"
                             :children [{:operator "OR"
                                         :cpe_match [{:cpe23Uri "cpe:2.3:a:nvidia:gpu_driver:*:*:*:*:*:*:*:*"}
                                                     {:cpe23Uri "cpe:2.3:a:nvidia:gpu_driver:*:*:*:*:*:*:*:*"}
                                                     {:cpe23Uri "cpe:2.3:a:nvidia:gpu_driver:*:*:*:*:*:*:*:*"}]}
                                        {:operator "OR"
                                         :cpe_match [{:cpe23Uri "cpe:2.3:o:linux:linux_kernel:-:*:*:*:*:*:*:*"}]}]}]}
   :id "vulnerability-three"})

(deftest test-apply-operator
  (testing "should return truthy"
    (are [operator operands]
        (sut/apply-operator {:negate false
                             :operands operands
                             :operator operator
                             :result true})
      "OR" [false false true]
      "OR" [false true false]
      "OR" [["ted"] nil "fred"]
      "AND" [true true true]
      "AND" [true true true 18]
      "AND" [["ted"] true "fred" true]))

  (testing "should return falsey"
    (are [operator operands]
        (not (sut/apply-operator {:operands operands
                                  :operator operator
                                  :result true}))
      "OR" [false false false]
      "AND" [false false false]
      "AND" [false true true]))

  (testing "with negate set to true, should return truthy"
    (are [operator operands]
        (sut/apply-operator {:negate true
                             :operands operands
                             :operator operator
                             :result true})

      "OR" [false false false]
      "AND" [false false false]))

  (testing "with negate set to true, should return falsey"
    (are [operator operands]
        (not (sut/apply-operator {:negate true
                                  :operands operands
                                  :operator operator
                                  :result true}))
      "OR" [false false true]
      "OR" [false true false]
      "OR" [["ted"] nil "fred"]
      "AND" [true true true]
      "AND" [true true true 18]
      "AND" [["ted"] true "fred" true])))

(deftest test-query-cpe-matches
  (let [or-cpe-match {:operator "OR",
                      :cpe_match [{:cpe23Uri "cpe:2.3:o:microsoft:windows_10:-:*:*:*:*:*:*:*"}
                                  {:cpe23Uri "cpe:2.3:o:microsoft:windows_10:20h2:*:*:*:*:*:*:*"}
                                  {:cpe23Uri "cpe:2.3:o:microsoft:windows_10:1607:*:*:*:*:*:*:*"}
                                  {:cpe23Uri "cpe:2.3:o:microsoft:windows_10:1803:*:*:*:*:*:*:*"}]}
        and-cpe-match {:operator "AND"
                       :cpe_match [{:cpe23Uri "cpe:2.3:a:nvidia:virtual_gpu_manager:*:*:*:*:*:*:*:*"}
                                   {:cpe23Uri "cpe:2.3:o:redhat:enterprise_linux_kernel-based_virtual_machine:-:*:*:*:*:*:*:*"}]}]
    (testing "OR CPEs should match"
      (are [cpes] (sut/query-cpe-matches or-cpe-match (map sut/->cpe-match cpes))
        ["cpe:2.3:o:microsoft:windows_10:-:*:*:*:*:*:*:*"]
        ["cpe:2.3:o:microsoft:windows_10:20h2:*:*:*:*:*:*:*"]
        ["cpe:2.3:o:microsoft:windows_10:1607:*:*:*:*:*:*:*"]
        ["cpe:2.3:o:microsoft:windows_10:1803:*:*:*:*:*:*:*"]
        ["cpe:2.3:o:microsoft:windows*:1803:*:*:*:*:*:*:*"]

        ["cpe:2.3:o:microsoft:windows_10:-:*:*:*:*:*:*:*"
         "cpe:2.3:a:nvidia:gpu_driver:*:*:*:*:*:*:*:*"
         "cpe:2.3:a:nvidia:virtual_gpu_manager:*:*:*:*:*:*:*:*"]))
    (testing "OR CPEs should not match"
      (are [cpes] (not (sut/query-cpe-matches or-cpe-match (map sut/->cpe-match cpes)))
        ["cpe:2.3:o:microsoft:fake-windows:-:*:*:*:*:*:*:*"]
        ["cpe:2.3:o:microsoft:fake-windows:-:*:*:*:*:*:*:*"
         "cpe:2.3:a:nvidia:gpu_driver:*:*:*:*:*:*:*:*"
         "cpe:2.3:a:nvidia:virtual_gpu_manager:*:*:*:*:*:*:*:*"]))
    (testing "AND CPEs should match"
      (are [cpes] (sut/query-cpe-matches and-cpe-match (map sut/->cpe-match cpes))
        ["cpe:2.3:a:nvidia:virtual_gpu_manager:*:*:*:*:*:*:*:*"
         "cpe:2.3:o:redhat:enterprise_linux_kernel-based_virtual_machine:-:*:*:*:*:*:*:*"]))
    (testing "AND CPEs should match"
      (are [cpes] (sut/query-cpe-matches and-cpe-match (map sut/->cpe-match cpes))
        ["cpe:2.3:a:nvidia:virtual_gpu_manager:*:*:*:*:*:*:*:*"
         "cpe:2.3:o:redhat:enterprise_linux_kernel-based_virtual_machine:-:*:*:*:*:*:*:*"
         "cpe:2.3:o:microsoft:fake-windows:-:*:*:*:*:*:*:*"]))
    (testing "AND CPEs should not match"
      (are [cpes] (not (sut/query-cpe-matches and-cpe-match (map sut/->cpe-match cpes)))
        ["cpe:2.3:o:microsoft:fake-windows:-:*:*:*:*:*:*:*"
         "cpe:2.3:a:nvidia:gpu_driver:*:*:*:*:*:*:*:*"
         "cpe:2.3:a:nvidia:virtual_gpu_manager:*:*:*:*:*:*:*:*"]))))

(deftest test-vulnerability->ids
  (is (= ["CVE-2021-0301"]
         (sut/vulnerabilities->ids [(sut/->cpe-match "cpe:2.3:o:google:android:-:*:*:*:*:*:*:*")]
                                   [{:id "CVE-2021-0301"
                                     :configurations {:nodes [{:operator "OR",
                                                               :cpe_match
                                                               [{:vulnerable true,
                                                                 :cpe23Uri "cpe:2.3:o:google:android:-:*:*:*:*:*:*:*"}]}]}}])))
  (testing "CPEs should match these CVEs"
    (are [cve cpes]
        (= [(:id cve)] (sut/vulnerabilities->ids (map sut/->cpe-match cpes) [cve]))
      left-closed-right-open ["cpe:2.3:o:juniper:advanced_threat_prevention:-:*:*:*:*:*:*:*"
                              "cpe:2.3:h:juniper:atp400:*:*:*:*:*:*:*:*"]
      left-closed-right-open ["cpe:2.3:o:juniper:advanced_threat_prevention:-:*:*:*:*:*:*:*"
                              "cpe:2.3:h:juniper:atp400:-:*:*:*:*:*:*:*"]
      left-closed-right-open ["cpe:2.3:o:juniper:advanced_threat_prevention:5.0.0:*:*:*:*:*:*:*"
                              "cpe:2.3:h:juniper:atp400:-:*:*:*:*:*:*:*"]
      left-closed-right-open ["cpe:2.3:o:juniper:advanced_threat_prevention:5.0.1:*:*:*:*:*:*:*"
                              "cpe:2.3:h:juniper:atp400:-:*:*:*:*:*:*:*"]
      left-closed-right-open ["cpe:2.3:o:juniper:advanced_threat_prevention:5.0.2:*:*:*:*:*:*:*"
                              "cpe:2.3:h:juniper:atp400:-:*:*:*:*:*:*:*"]
      single-configuration-no-children ["cpe:2.3:o:microsoft:windows_10:1607:*:*:*:*:*:*:*"]
      single-configuration-with-children ["cpe:2.3:a:nvidia:virtual_gpu_manager:*:*:*:*:*:*:*:*"
                                          "cpe:2.3:o:redhat:enterprise_linux_kernel-based_virtual_machine:-:*:*:*:*:*:*:*"]
      multiple-configurations ["cpe:2.3:a:nvidia:gpu_driver:*:*:*:*:*:*:*:*"
                               "cpe:2.3:o:microsoft:windows:-:*:*:*:*:*:*:*"]
      multiple-configurations ["cpe:2.3:a:nvidia:gpu_driver:*:*:*:*:*:*:*:*"
                               "cpe:2.3:o:linux:linux_kernel:-:*:*:*:*:*:*:*"]))
  (testing "CPEs should not match these CVEs"
    (are [cve cpes]
        (empty? (sut/vulnerabilities->ids (map sut/->cpe-match cpes) [cve]))
      left-closed-right-open ["cpe:2.3:o:juniper:advanced_threat_prevention:4.9.18:*:*:*:*:*:*:*"]
      left-closed-right-open ["cpe:2.3:o:juniper:advanced_threat_prevention:5.0.3:*:*:*:*:*:*:*"]
      left-closed-right-open ["cpe:2.3:o:juniper:advanced_threat_prevention:6.1.2:*:*:*:*:*:*:*"]
      single-configuration-no-children ["cpe:2.3:o:fred:windows_server_2019:-:*:*:*:*:*:*:*"]
      single-configuration-with-children ["cpe:2.3:o:redhat:enterprise_linux_kernel-based_virtual_machine:-:*:*:*:*:*:*:*"]
      multiple-configurations ["cpe:2.3:a:nvidia:gpu_driver:*:*:*:*:*:*:*:*"
                               "cpe:2.3:o:redhat:enterprise_linux_kernel-based_virtual_machine:-:*:*:*:*:*:*:*"
                               "cpe:2.3:o:android:android_kernel:-:*:*:*:*:*:*:*"]
      multiple-configurations ["cpe:2.3:a:nvidia:gpu_driver:*:*:*:*:*:*:*:*"
                               "cpe:2.3:o:openbsd:openbsd_kernel:-:*:*:*:*:*:*:*"]))
  (testing "Should match vulnerability-one and vulnerability-three"
    (is (= ["vulnerability-one"
            "vulnerability-three"]
           (sut/vulnerabilities->ids (map sut/->cpe-match
                                          ["cpe:2.3:a:nvidia:gpu_driver:*:*:*:*:*:*:*:*"
                                           "cpe:2.3:o:linux:linux_kernel:-:*:*:*:*:*:*:*"
                                           "cpe:2.3:o:microsoft:windows_10:-:*:*:*:*:*:*:*"])
                                     [single-configuration-no-children
                                      single-configuration-with-children
                                      multiple-configurations])))))

(deftest test-str->pattern
  (are [input expected] (testing input
                          (is (= expected
                                 (str (sut/str->pattern input))))
                          true)
    "gpu_driver*" "gpu_driver.*"
    "*" ".*"
    "gpu_*driver*" "gpu_.*driver.*"
    "?gpu_*dri?ver" ".?gpu_.*dri.?ver"))

(deftest test-component-match?
  (are [source target] (testing (format "%s matches %s" source target)
                         (is (sut/component-match? source target))
                         true)
    "-" "-"
    "-" "*"
    "*" "-"
    "gpu_driver*" "*"
    "gpu_driver??" "*"
    "gpu_driver" "gpu_driver"
    "*" "gpu_driver"
    "gpu_driver" "*"
    "*gpu_driver" "nvidia-gpu_driver"
    "nvidia-gpu_driver" "*gpu_driver"
    "gpu_driver*" "gpu_driver-nvidia"
    "gpu_driver-nvidia" "gpu_driver*"
    "?nvidia" "nvidia"
    "?nvidia" "fnvidia"
    "nvidia" "?nvidia"
    "fnvidia" "?nvidia"
    "nvidia" "nvidia?"
    "nvidiaf" "nvidia?"
    "nvidia?" "nvidia"
    "nvidia?" "nvidiaf")
  (are [source target] (testing (format "%s matches %s" source target)
                         (is (not (sut/component-match? source target)))
                         true)
    "gpu_driver*" "-"
    "gpu_driver" "-"
    "-" "gpu_driver"
    "Microsoft" "Cisco"
    "nvidia" "gpu_driver"
    "*nvidia" "gpu_driver"
    "gpu_driver" "*nvidia"
    "?nvidia" "gpu_driver"
    "gpu_driver" "?nvidia"
    "nvidia?" "gpu_driver"
    "gpu_driver?" "nvidia"
    "gpu_driver*" "nvidia"))

(deftest test-satisfies-interval?
  (let [closed {:version-start-including "3.0.0"
                :version-end-including "3.0.9"}
        open {:version-start-excluding "3.0.0"
              :version-end-excluding "3.0.9"}
        left-closed-right-open {:version-start-including "3.0.0"
                                :version-end-excluding "3.0.9"}
        left-open-right-closed {:version-start-excluding "3.0.0"
                                :version-end-including "3.0.9"}
        left-closed {:version-start-including "3.0.0"}
        left-open {:version-start-excluding "3.0.0"}
        right-closed {:version-end-including "3.0.0"}
        right-open {:version-end-excluding "3.0.0"}]
    (are [x m] (testing (format "%s should satisfy closed interval %s" x m)
                 (is (sut/satisfies-interval? x m))
                 true)
      "3.0.0" closed
      "3.0.5" closed
      "3.0.9" closed)
    (are [x m] (testing (format "%s should not satisfy closed interval %s" x m)
                 (is (not (sut/satisfies-interval? x m)))
                 true)
      "2.0.9" closed
      "4.0.0" closed)
    (are [x m] (testing (format "%s should satisfy open interval %s" x m)
                 (is (sut/satisfies-interval? x m))
                 true)
      "3.0.1" open
      "3.0.5" open
      "3.0.8" open)
    (are [x m] (testing (format "%s should not satisfy open interval %s" x m)
                 (is (not (sut/satisfies-interval? x m)))
                 true)
      "3.0.0" open
      "3.0.9" open)
    (are [x m] (testing (format "%s should satisfy left-closed-right-open interval %s" x m)
                 (is (sut/satisfies-interval? x m))
                 true)
      "3.0.0" left-closed-right-open
      "3.0.5" left-closed-right-open
      "3.0.8" left-closed-right-open)
    (are [x m] (testing (format "%s should not satisfy left-closed-right-open interval %s" x m)
                 (is (not (sut/satisfies-interval? x m)))
                 true)
      "2.0.9" left-closed-right-open
      "3.0.9" left-closed-right-open)
    (are [x m] (testing (format "%s should satisfy left-open-right-closed interval %s" x m)
                 (is (sut/satisfies-interval? x m))
                 true)
      "3.0.1" left-open-right-closed
      "3.0.5" left-open-right-closed
      "3.0.9" left-open-right-closed)
    (are [x m] (testing (format "%s should not satisfy left-open-right-closed interval %s" x m)
                 (is (not (sut/satisfies-interval? x m)))
                 true)
      "3.0.0" left-open-right-closed
      "4.0.0" left-open-right-closed)

    (are [x m] (testing (format "%s should satisfy left-closed interval %s" x m)
                 (is (sut/satisfies-interval? x m))
                 true)
      "3.0.0" left-closed
      "3.0.5" left-closed
      "57.0.32" left-closed)
    (are [x m] (testing (format "%s should not satisfy left-closed interval %s" x m)
                 (is (not (sut/satisfies-interval? x m)))
                 true)
      "2.0.9" left-closed
      "1.0.0" left-closed)
    (are [x m] (testing (format "%s should satisfy left-open interval %s" x m)
                 (is (sut/satisfies-interval? x m))
                 true)
      "3.0.1" left-open
      "3.0.5" left-open
      "57.0.32" left-open)
    (are [x m] (testing (format "%s should not satisfy left-open interval %s" x m)
                 (is (not (sut/satisfies-interval? x m)))
                 true)
      "3.0.0" left-open
      "1.0.0" left-open)
    (are [x m] (testing (format "%s should satisfy right-closed interval %s" x m)
                 (is (sut/satisfies-interval? x m))
                 true)
      "2.0.9" right-closed
      "3.0.0" right-closed)
    (are [x m] (testing (format "%s should not satisfy right-closed interval %s" x m)
                 (is (not (sut/satisfies-interval? x m)))
                 true)
      "3.0.1" right-closed
      "3.0.2" right-closed)
    (are [x m] (testing (format "%s should satisfy right-open interval %s" x m)
                 (is (sut/satisfies-interval? x m))
                 true)
      "1.0.2" right-open
      "2.0.9" right-open)
    (are [x m] (testing (format "%s should not satisfy right-open interval %s" x m)
                 (is (not (sut/satisfies-interval? x m)))
                 true)
      "3.0.0" right-open
      "5.0.2" right-open)))

(deftest test->internal-representation
  (are [input expected] (testing input
                          (is (= expected
                                 (sut/->internal input)))
                          true)
    "\\:" "_COLON_"

    "cpe:2.3:a:wegoi:re-volt_2_\\:_multiplayer:1.1.4:*:*:*:*:android:*:*"
    "cpe:2.3:a:wegoi:re-volt_2__COLON__multiplayer:1.1.4:*:*:*:*:android:*:*"

    "cpe:2.3:o:rockwellautomation:slc5\\/01_1747-l5x_firmware:-:*:*:*:*:*:*:*"
    "cpe:2.3:o:rockwellautomation:slc5_SLASH_01_1747-l5x_firmware:-:*:*:*:*:*:*:*"

    "cpe:2.3:h:juniper:ex8200\\/vc_\\(xre\\):-:*:*:*:*:*:*:*"
    "cpe:2.3:h:juniper:ex8200_SLASH_vc__OPEN_PAREN_xre_CLOSED_PAREN_:-:*:*:*:*:*:*:*"))

(deftest test-internal->triple-escape
  (are [input expected] (testing input
                          (is (= expected
                                 (sut/internal->triple-escape input)))
                          true)
    "_COLON_" "\\\\\\:"

    "cpe:2.3:a:wegoi:re-volt_2__COLON__multiplayer:1.1.4:*:*:*:*:android:*:*"
    "cpe:2.3:a:wegoi:re-volt_2_\\\\\\:_multiplayer:1.1.4:*:*:*:*:android:*:*"

    "cpe:2.3:o:rockwellautomation:slc5_SLASH_01_1747-l5x_firmware:-:*:*:*:*:*:*:*"
    "cpe:2.3:o:rockwellautomation:slc5\\\\\\/01_1747-l5x_firmware:-:*:*:*:*:*:*:*"

    "cpe:2.3:h:juniper:ex8200_SLASH_vc__OPEN_PAREN_xre_CLOSED_PAREN_:-:*:*:*:*:*:*:*"
    "cpe:2.3:h:juniper:ex8200\\\\\\/vc_\\\\\\(xre\\\\\\):-:*:*:*:*:*:*:*"))

(deftest test-valid-formatted-cpe-23-string?
  (are [input expected] (testing input
                          (is (= expected
                                 (sut/valid-formatted-cpe-23-string? input)))
                          true)
    "" false
    "cpe:2.3:h:juniper:ex8200\\\\/vc_\\\\(xre\\\\):-:*:*:*:*:*:*:*" true
    "cpe:2.3:o:juniper:advanced_threat_prevention:*:*:*:*:*:*:*:*" true
    "cpe:2.3:o:*:-:*:*:*:*:*:*:*:*" false
    "cpe:2.3:o:juniper*:advanced_threat_prevention*:*:*:*:*:*:*:*:*" true))
