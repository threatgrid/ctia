{:linters
 {:skip-comments true
  :unresolved-symbol
  {:exclude [(puppetlabs.trapperkeeper.testutils.bootstrap/with-app-with-config [app])]}
  :unresolved-var
  {:exclude [clj-momo.lib.clj-time.core/seconds]}}
 :lint-as {puppetlabs.trapperkeeper.core/defservice  clj-kondo.lint-as/def-catch-all
           ctia.lib.compojure.api.core/GET           clj-kondo.lint-as/def-catch-all
           ctia.lib.compojure.api.core/PATCH         clj-kondo.lint-as/def-catch-all
           ctia.lib.compojure.api.core/POST          clj-kondo.lint-as/def-catch-all
           ctia.lib.compojure.api.core/PUT           clj-kondo.lint-as/def-catch-all
           ctia.lib.compojure.api.core/DELETE        clj-kondo.lint-as/def-catch-all
           ctia.lib.compojure.api.core/context       clj-kondo.lint-as/def-catch-all

           ctia.schemas.core/defschema               clj-kondo.lint-as/def-catch-all
           ctia.schemas.core/def-acl-schema          clj-kondo.lint-as/def-catch-all
           ctia.schemas.core/def-stored-schema       clj-kondo.lint-as/def-catch-all
           ctia.schemas.core/def-advanced-acl-schema clj-kondo.lint-as/def-catch-all

           ctia.stores.es.store/def-es-store         clojure.core/defrecord
           ctia.graphql.delayed/fn                   clj-kondo.lint-as/def-catch-all

           flanders.core/def-entity-type             clj-kondo.lint-as/def-catch-all
           flanders.core/def-eq                      clj-kondo.lint-as/def-catch-all}}
