version: '2'
services:
  redis-dev:
    image: redis:5.0.5
    ports:
      - "6379:6379"
  elasticsearch-dev:
    image: elasticsearch:5.6.9
    environment:
      - cluster.name=elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.2
    hostname: "zookeeper"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: localhost:2181:2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:5.3.2
    hostname: "localhost"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: SSL://localhost:9092
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: credentials
      KAFKA_SSL_KEY_CREDENTIALS: credentials
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: credentials
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      KAFKA_SSL_CLIENT_AUTH: requested
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
    ports:
      - "9092:9092"
    volumes:
      - ${PWD}/containers/dev/keystore/kafka.keystore.jks:/etc/kafka/secrets/kafka.keystore.jks:ro
      - ${PWD}/containers/dev/truststore/kafka.truststore.jks:/etc/kafka/secrets/kafka.truststore.jks:ro
      - ${PWD}/containers/dev/credentials:/etc/kafka/secrets/credentials:ro
      - /var/run/docker.sock:/var/run/docker.sock
  docker-riemann-dev:
    image: riemannio/riemann:0.3.5
    ports:
      - "5555:5555"
      - "5555:5555/udp"
      - "5556:5556"
      - "5557:5557" # nREPL
    environment:
      - ELASTICSEARCH_URL=http://localhost:9200
    volumes:
      - ./riemann.config:/etc/riemann.config
  docker-riemann-dash-dev:
    image: include/docker-riemann-dash
    ports:
      - "4567:4567"
