; -*- mode: clojure; -*-

;; To live-reload this config:
;; $ clj -Sdeps '{:deps {nrepl {:mvn/version "0.7.0"}}}' -m nrepl.cmdline --connect --host  localhost --port 5557
;; user=> (riemann.bin/reload!)

;; Note: if saving this file triggers an error during the reload,
;; it's probably because of https://github.com/moby/moby/issues/15793
;; The bottom of this file fixes it for vim, at least.

(logging/init {:console true})

(let [host "0.0.0.0"]
  (tcp-server {:host host})
  (udp-server {:host host})
  (ws-server  {:host host})
  (repl-server {:host host}))
(instrumentation {:enabled? true})

(periodically-expire 5)

(let [index (index)]
  (streams
   (default :ttl 60
            index
            (expired (fn [event] (info "expired" event))))))


;; Elasticsearch address
(def es-endpoint
  (or (System/getenv "ELASTICSEARCH_URL")
      "http://localhost:9207"))

;; Elasticsearch Application Events
(def elastic-bulk-events
  (elasticsearch-bulk
   {:es-endpoint es-endpoint
    :username "elastic"
    :password "ductile"
    :formatter (default-bulk-formatter
                {:es-index "events"
                 :type "event"
                 :index-suffix "-yyyy.MM"
                 :es-action "index"})}))

(streams
  (where (not (expired? event))
    ;; Forward only Application events to the ES metrics cluster on the events index
    (where (not (service #"^(riemann|jvm\.)"))
      (batch 100 1
             elastic-bulk-events))))

(streams
  prn)


;; reloadable using docker volumes https://github.com/moby/moby/issues/15793#issuecomment-161162118
;; vim: ft=clojure backupcopy=yes
